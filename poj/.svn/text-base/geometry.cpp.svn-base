struct Point 
{
	double x,y;
	Point operator - (const Point & b)
	{
		Point c;
		c.x = x- b.x;
		c.y = y- b.y;
		return c;
	}
};
bool intersect(Point a0, Point b0, Point a1, Point b1, double & t0, double & t1, Point & r)
{
	Point p1,p2,p3;
	p1=  b0-a0;
	p2= b1-a1;
	p3= a0 - a1;
	const double denominator =  p1.x * p2.y  - p1.y * p2.x ;
	if (abs(denominator) < 1e-10)
	{
		return false;
	}
	double na, nb;
	na= p2.x* p3.y - p3.x* p2.y;
	na/= denominator;

	nb= p3.y* p1.x - p1.y* p3.x ;
	nb/= denominator;

	t0= na;
	t1= nb;

	r.x= a0.x+ p1.x* na;
	r.y= a0.y+ p1.y*na;

	return true;
}

bool parallelLine(Point a0, Point b0, Point a1, Point b1)
{
	Point p1,p2;
	p1= b0-a0;
	p2= b1-a1;
	if (   p1.y* p2.x - p1.x* p2.y ==0) return true; else return false;
}